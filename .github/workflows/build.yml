name: Build Pipeline

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  composer:
    runs-on: ubuntu-latest
    container: spaceonfire/nginx-php-fpm:latest-8.0
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Validate composer.json
        run: |
          /opt/spaceonfire/bin/select-composer.sh v2
          composer validate
          composer validate src/Collection/composer.json
          composer validate src/CommandBus/composer.json
          composer validate src/Common/composer.json
          composer validate src/Container/composer.json
          composer validate src/Criteria/composer.json
          composer validate src/DataSource/composer.json
          composer validate src/EasyCodingStandardBridge/composer.json
          composer validate src/LaminasHydratorBridge/composer.json
          composer validate src/MonologBridge/composer.json
          composer validate src/Type/composer.json
          composer validate src/ValueObject/composer.json

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        env:
          COMPOSER_CACHE_KEY: 'composer-8.0-prefer-stable'
        with:
          path: vendor
          key: ${{ env.COMPOSER_CACHE_KEY }}-${{ hashFiles('composer.json') }}
          restore-keys: ${{ env.COMPOSER_CACHE_KEY }}

      - name: Install dependencies
        run: |
          /opt/spaceonfire/bin/select-composer.sh v2
          composer update --prefer-stable --prefer-dist --no-progress --no-interaction --no-progress

      - name: Validate monorepo
        run: vendor/bin/monorepo-builder validate --ansi

  codestyle:
    runs-on: ubuntu-latest
    container: spaceonfire/nginx-php-fpm:latest-8.0
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        env:
          COMPOSER_CACHE_KEY: 'composer-8.0-prefer-stable'
        with:
          path: vendor
          key: ${{ env.COMPOSER_CACHE_KEY }}-${{ hashFiles('composer.json') }}
          restore-keys: ${{ env.COMPOSER_CACHE_KEY }}

      - name: Install dependencies
        run: |
          /opt/spaceonfire/bin/select-composer.sh v2
          composer update --prefer-stable --prefer-dist --no-progress --no-interaction --no-progress

      - name: Check coding standard
        run: vendor/bin/ecs check --no-progress-bar --no-interaction

  lint:
    runs-on: ubuntu-latest
    container: spaceonfire/nginx-php-fpm:latest-8.0
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        env:
          COMPOSER_CACHE_KEY: 'composer-8.0-prefer-stable'
        with:
          path: vendor
          key: ${{ env.COMPOSER_CACHE_KEY }}-${{ hashFiles('composer.json') }}
          restore-keys: ${{ env.COMPOSER_CACHE_KEY }}

      - name: Install dependencies
        run: |
          /opt/spaceonfire/bin/select-composer.sh v2
          composer update --prefer-stable --prefer-dist --no-progress --no-interaction --no-progress

      - name: PHPStan
        run: vendor/bin/phpstan analyse --memory-limit=512M --no-progress --no-interaction

  phpunit:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - '7.4'
          - '8.0'
        stability:
          - 'prefer-lowest'
          - 'prefer-stable'
    container: spaceonfire/nginx-php-fpm:latest-${{ matrix.php-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        env:
          COMPOSER_CACHE_KEY: 'composer-${{ matrix.php-version }}-${{ matrix.stability }}'
        with:
          path: vendor
          key: ${{ env.COMPOSER_CACHE_KEY }}-${{ hashFiles('composer.json') }}
          restore-keys: ${{ env.COMPOSER_CACHE_KEY }}

      - name: Install dependencies
        run: |
          /opt/spaceonfire/bin/select-composer.sh v2
          composer update --${{ matrix.stability }} --prefer-dist --no-progress --no-interaction --no-progress

      - name: PHPUnit
        run: |
          apk update
          docker-php-ext-enable xdebug
          php -d xdebug.mode=coverage vendor/bin/phpunit --no-interaction

      - name: PHPUnit Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: phpunit-${{ matrix.php-version }}
          path: build/phpunit/

      - name: Generate coverage badge
        if: matrix.php-version == '8.0' && matrix.stability == 'prefer-stable' && github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: php bin/coverage-badges.php build/phpunit/clover.xml ${{ secrets.COVERAGE_GIST_ID }} ${{ secrets.COVERAGE_GIST_TOKEN }}

#  split_monorepo:
#    runs-on: ubuntu-latest
#    needs:
#      - 'composer'
#      - 'codestyle'
#      - 'lint'
#      - 'phpunit'
#    strategy:
#      fail-fast: false
#      matrix:
#        package:
#          - remote_name: 'collection'
#            remote_repo: ''
#            directory: 'src/Collection'
#          - remote_name: 'command-bus'
#            remote_repo: ''
#            directory: 'src/CommandBus'
#          - remote_name: 'common'
#            remote_repo: ''
#            directory: 'src/Common'
#          - remote_name: 'container'
#            remote_repo: ''
#            directory: 'src/Container'
#          - remote_name: 'criteria'
#            remote_repo: ''
#            directory: 'src/Criteria'
#          - remote_name: 'data-source'
#            remote_repo: ''
#            directory: 'src/DataSource'
#          - remote_name: 'easy-coding-standard-bridge'
#            remote_repo: ''
#            directory: 'src/EasyCodingStandardBridge'
#          - remote_name: 'laminas-hydrator-bridge'
#            remote_repo: ''
#            directory: 'src/LaminasHydratorBridge'
#          - remote_name: 'monolog-bridge'
#            remote_repo: ''
#            directory: 'src/MonologBridge'
#          - remote_name: 'type'
#            remote_repo: ''
#            directory: 'src/Type'
#          - remote_name: 'value-object'
#            remote_repo: ''
#            directory: 'src/ValueObject'
#    env:
#      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
#    steps:
#      - name: 'Checkout'
#        uses: 'actions/checkout@v2'
#
#      - name: 'Split branch'
#        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
#        uses: 'symplify/monorepo-split-github-action@2.0'
#        with:
#          package-directory: '${{ matrix.package.directory }}'
#          split-repository-organization: 'spaceonfire'
#          split-repository-name: '${{ matrix.package.repository_name }}'
#          user-name: 'hustlahusky'
#          user-email: 'genteelknight@gmail.com'
#
#      - name: 'Split tag'
#        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
#        uses: 'symplify/monorepo-split-github-action@2.0'
#        with:
#          tag: '${GITHUB_REF#refs/tags/}'
#          package-directory: '${{ matrix.package.directory }}'
#          split-repository-organization: 'spaceonfire'
#          split-repository-name: '${{ matrix.package.repository_name }}'
#          user-name: 'hustlahusky'
#          user-email: 'genteelknight@gmail.com'
